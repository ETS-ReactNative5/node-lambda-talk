{
  "Resources": {
    "CandidateServiceCVLibrary3996540D": {
      "Type": "AWS::S3::Bucket",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "CdkInitStack/CandidateService/CVLibrary/Resource"
      }
    },
    "CandidateServiceCVLibraryNotifications043B505D": {
      "Type": "Custom::S3BucketNotifications",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
            "Arn"
          ]
        },
        "BucketName": {
          "Ref": "CandidateServiceCVLibrary3996540D"
        },
        "NotificationConfiguration": {
          "LambdaFunctionConfigurations": [
            {
              "Events": [
                "s3:ObjectCreated:*"
              ],
              "LambdaFunctionArn": {
                "Fn::GetAtt": [
                  "CandidateServiceAnalyzeCV2284C345",
                  "Arn"
                ]
              }
            }
          ]
        }
      },
      "DependsOn": [
        "CandidateServiceAnalyzeCVAllowBucketNotificationsFromCdkInitStackCandidateServiceCVLibrary90C2FAB284D04B74"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkInitStack/CandidateService/CVLibrary/Notifications/Resource"
      }
    },
    "CandidateServiceCandidates57DC91CB": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "Name",
            "KeyType": "HASH"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "Name",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "StreamSpecification": {
          "StreamViewType": "NEW_IMAGE"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkInitStack/CandidateService/Candidates/Resource"
      }
    },
    "CandidateServiceCandidateProfileServiceRole0085F70D": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "lambda.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkInitStack/CandidateService/CandidateProfile/ServiceRole/Resource"
      }
    },
    "CandidateServiceCandidateProfileServiceRoleDefaultPolicyD03DF3A3": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CandidateServiceCandidates57DC91CB",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CandidateServiceCandidateProfileServiceRoleDefaultPolicyD03DF3A3",
        "Roles": [
          {
            "Ref": "CandidateServiceCandidateProfileServiceRole0085F70D"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkInitStack/CandidateService/CandidateProfile/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "CandidateServiceCandidateProfileCE07AA46": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "CandidateServiceCandidateProfileCodeS3BucketF4E9F685"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "CandidateServiceCandidateProfileCodeS3VersionKey44951822"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "CandidateServiceCandidateProfileCodeS3VersionKey44951822"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "candidate-profile.handler",
        "Role": {
          "Fn::GetAtt": [
            "CandidateServiceCandidateProfileServiceRole0085F70D",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Environment": {
          "Variables": {
            "CANDIDATES_TABLE": {
              "Ref": "CandidateServiceCandidates57DC91CB"
            }
          }
        }
      },
      "DependsOn": [
        "CandidateServiceCandidateProfileServiceRoleDefaultPolicyD03DF3A3",
        "CandidateServiceCandidateProfileServiceRole0085F70D"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkInitStack/CandidateService/CandidateProfile/Resource",
        "aws:asset:path": "asset.00cc1f4619b9c6eb86638d9b4090706cfae18d926c86c937707e50007f43a523",
        "aws:asset:property": "Code"
      }
    },
    "CandidateServiceCandidateProfileApiPermissionGET842F7C3F": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "CandidateServiceCandidateProfileCE07AA46",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "CandidateServiceCandidateApi827ACF3E"
              },
              "/",
              {
                "Ref": "CandidateServiceCandidateApiDeploymentStageprodD1919AD8"
              },
              "/GET/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkInitStack/CandidateService/CandidateProfile/ApiPermission.GET.."
      }
    },
    "CandidateServiceCandidateProfileApiPermissionTestGET49747404": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "CandidateServiceCandidateProfileCE07AA46",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "CandidateServiceCandidateApi827ACF3E"
              },
              "/test-invoke-stage/GET/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkInitStack/CandidateService/CandidateProfile/ApiPermission.Test.GET.."
      }
    },
    "CandidateServiceCandidateProfileApiPermissionGETid9C21D01D": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "CandidateServiceCandidateProfileCE07AA46",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "CandidateServiceCandidateApi827ACF3E"
              },
              "/",
              {
                "Ref": "CandidateServiceCandidateApiDeploymentStageprodD1919AD8"
              },
              "/GET/{id}"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkInitStack/CandidateService/CandidateProfile/ApiPermission.GET..{id}"
      }
    },
    "CandidateServiceCandidateProfileApiPermissionTestGETidA7C0F36B": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "CandidateServiceCandidateProfileCE07AA46",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "CandidateServiceCandidateApi827ACF3E"
              },
              "/test-invoke-stage/GET/{id}"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkInitStack/CandidateService/CandidateProfile/ApiPermission.Test.GET..{id}"
      }
    },
    "CandidateServiceAnalyzeCVServiceRole0B59142E": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "lambda.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkInitStack/CandidateService/AnalyzeCV/ServiceRole/Resource"
      }
    },
    "CandidateServiceAnalyzeCVServiceRoleDefaultPolicy0E6B8920": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject*",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CandidateServiceCVLibrary3996540D",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "CandidateServiceCVLibrary3996540D",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CandidateServiceCandidates57DC91CB",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CandidateServiceAnalyzeCVServiceRoleDefaultPolicy0E6B8920",
        "Roles": [
          {
            "Ref": "CandidateServiceAnalyzeCVServiceRole0B59142E"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkInitStack/CandidateService/AnalyzeCV/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "CandidateServiceAnalyzeCV2284C345": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "CandidateServiceAnalyzeCVCodeS3Bucket90474A33"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "CandidateServiceAnalyzeCVCodeS3VersionKeyE5EAD488"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "CandidateServiceAnalyzeCVCodeS3VersionKeyE5EAD488"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "analyze-cv.handler",
        "Role": {
          "Fn::GetAtt": [
            "CandidateServiceAnalyzeCVServiceRole0B59142E",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Environment": {
          "Variables": {
            "CV_BUCKET": {
              "Ref": "CandidateServiceCVLibrary3996540D"
            },
            "CANDIDATES_TABLE": {
              "Ref": "CandidateServiceCandidates57DC91CB"
            }
          }
        }
      },
      "DependsOn": [
        "CandidateServiceAnalyzeCVServiceRoleDefaultPolicy0E6B8920",
        "CandidateServiceAnalyzeCVServiceRole0B59142E"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkInitStack/CandidateService/AnalyzeCV/Resource",
        "aws:asset:path": "asset.00cc1f4619b9c6eb86638d9b4090706cfae18d926c86c937707e50007f43a523",
        "aws:asset:property": "Code"
      }
    },
    "CandidateServiceAnalyzeCVAllowBucketNotificationsFromCdkInitStackCandidateServiceCVLibrary90C2FAB284D04B74": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "CandidateServiceAnalyzeCV2284C345",
            "Arn"
          ]
        },
        "Principal": "s3.amazonaws.com",
        "SourceAccount": {
          "Ref": "AWS::AccountId"
        },
        "SourceArn": {
          "Fn::GetAtt": [
            "CandidateServiceCVLibrary3996540D",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkInitStack/CandidateService/AnalyzeCV/AllowBucketNotificationsFromCdkInitStackCandidateServiceCVLibrary90C2FAB2"
      }
    },
    "CandidateServiceEmailClerkServiceRoleCD5629E9": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "lambda.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkInitStack/CandidateService/EmailClerk/ServiceRole/Resource"
      }
    },
    "CandidateServiceEmailClerkServiceRoleDefaultPolicy351C8818": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "CandidateServiceCandidates57DC91CB",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            },
            {
              "Action": [
                "dynamodb:DescribeStream",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "CandidateServiceCandidates57DC91CB",
                  "StreamArn"
                ]
              }
            },
            {
              "Action": "dynamodb:ListStreams",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "ses:*",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CandidateServiceEmailClerkServiceRoleDefaultPolicy351C8818",
        "Roles": [
          {
            "Ref": "CandidateServiceEmailClerkServiceRoleCD5629E9"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkInitStack/CandidateService/EmailClerk/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "CandidateServiceEmailClerk62403744": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "CandidateServiceEmailClerkCodeS3Bucket9408C750"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "CandidateServiceEmailClerkCodeS3VersionKey5B70DB2E"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "CandidateServiceEmailClerkCodeS3VersionKey5B70DB2E"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Handler": "email-clerk.handler",
        "Role": {
          "Fn::GetAtt": [
            "CandidateServiceEmailClerkServiceRoleCD5629E9",
            "Arn"
          ]
        },
        "Runtime": "nodejs10.x",
        "Environment": {
          "Variables": {
            "CANDIDATES_TABLE": {
              "Ref": "CandidateServiceCandidates57DC91CB"
            }
          }
        }
      },
      "DependsOn": [
        "CandidateServiceEmailClerkServiceRoleDefaultPolicy351C8818",
        "CandidateServiceEmailClerkServiceRoleCD5629E9"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkInitStack/CandidateService/EmailClerk/Resource",
        "aws:asset:path": "asset.00cc1f4619b9c6eb86638d9b4090706cfae18d926c86c937707e50007f43a523",
        "aws:asset:property": "Code"
      }
    },
    "CandidateServiceEmailClerkDynamoDBEventSourceCdkInitStackCandidateServiceCandidates1B7947B8D41E3CD8": {
      "Type": "AWS::Lambda::EventSourceMapping",
      "Properties": {
        "EventSourceArn": {
          "Fn::GetAtt": [
            "CandidateServiceCandidates57DC91CB",
            "StreamArn"
          ]
        },
        "FunctionName": {
          "Ref": "CandidateServiceEmailClerk62403744"
        },
        "BatchSize": 100,
        "StartingPosition": "LATEST"
      },
      "Metadata": {
        "aws:cdk:path": "CdkInitStack/CandidateService/EmailClerk/DynamoDBEventSource:CdkInitStackCandidateServiceCandidates1B7947B8/Resource"
      }
    },
    "CandidateServiceCandidateApi827ACF3E": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Description": "Candidate access to their own profile",
        "Name": "Candidate API"
      },
      "Metadata": {
        "aws:cdk:path": "CdkInitStack/CandidateService/CandidateApi/Resource"
      }
    },
    "CandidateServiceCandidateApiDeployment75B46515c90f67c3c871a3eab3ee92c95e9d0017": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "CandidateServiceCandidateApi827ACF3E"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "CandidateServiceCandidateApiidGET71AB37CD",
        "CandidateServiceCandidateApiidD48CB246",
        "CandidateServiceCandidateApiGETDBD52CA6"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkInitStack/CandidateService/CandidateApi/Deployment/Resource"
      }
    },
    "CandidateServiceCandidateApiDeploymentStageprodD1919AD8": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "CandidateServiceCandidateApi827ACF3E"
        },
        "DeploymentId": {
          "Ref": "CandidateServiceCandidateApiDeployment75B46515c90f67c3c871a3eab3ee92c95e9d0017"
        },
        "StageName": "prod"
      },
      "Metadata": {
        "aws:cdk:path": "CdkInitStack/CandidateService/CandidateApi/DeploymentStage.prod/Resource"
      }
    },
    "CandidateServiceCandidateApiCloudWatchRoleC62B46E5": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "apigateway.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkInitStack/CandidateService/CandidateApi/CloudWatchRole/Resource"
      }
    },
    "CandidateServiceCandidateApiAccount5DCDBF8D": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "CandidateServiceCandidateApiCloudWatchRoleC62B46E5",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "CandidateServiceCandidateApi827ACF3E"
      ],
      "Metadata": {
        "aws:cdk:path": "CdkInitStack/CandidateService/CandidateApi/Account"
      }
    },
    "CandidateServiceCandidateApiGETDBD52CA6": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Fn::GetAtt": [
            "CandidateServiceCandidateApi827ACF3E",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "CandidateServiceCandidateApi827ACF3E"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "RequestTemplates": {
            "application/json": "{ \"statusCode\": \"200\" }"
          },
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "CandidateServiceCandidateProfileCE07AA46",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkInitStack/CandidateService/CandidateApi/Default/GET/Resource"
      }
    },
    "CandidateServiceCandidateApiidD48CB246": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "CandidateServiceCandidateApi827ACF3E",
            "RootResourceId"
          ]
        },
        "PathPart": "{id}",
        "RestApiId": {
          "Ref": "CandidateServiceCandidateApi827ACF3E"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkInitStack/CandidateService/CandidateApi/Default/{id}/Resource"
      }
    },
    "CandidateServiceCandidateApiidGET71AB37CD": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "GET",
        "ResourceId": {
          "Ref": "CandidateServiceCandidateApiidD48CB246"
        },
        "RestApiId": {
          "Ref": "CandidateServiceCandidateApi827ACF3E"
        },
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "CandidateServiceCandidateProfileCE07AA46",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "CdkInitStack/CandidateService/CandidateApi/Default/{id}/GET/Resource"
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "lambda.",
                      {
                        "Ref": "AWS::URLSuffix"
                      }
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkInitStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/Resource"
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:PutBucketNotification",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "Roles": [
          {
            "Ref": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CdkInitStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Role/DefaultPolicy/Resource"
      }
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Description": "AWS CloudFormation handler for \"Custom::S3BucketNotifications\" resources (@aws-cdk/aws-s3)",
        "Code": {
          "ZipFile": "exports.handler = (event, context) => {\n    const s3 = new (require('aws-sdk').S3)();\n    const https = require(\"https\");\n    const url = require(\"url\");\n    log(JSON.stringify(event, undefined, 2));\n    const props = event.ResourceProperties;\n    if (event.RequestType === 'Delete') {\n        props.NotificationConfiguration = {}; // this is how you clean out notifications\n    }\n    const req = {\n        Bucket: props.BucketName,\n        NotificationConfiguration: props.NotificationConfiguration\n    };\n    return s3.putBucketNotificationConfiguration(req, (err, data) => {\n        log({ err, data });\n        if (err) {\n            return submitResponse(\"FAILED\", err.message + `\\nMore information in CloudWatch Log Stream: ${context.logStreamName}`);\n        }\n        else {\n            return submitResponse(\"SUCCESS\");\n        }\n    });\n    function log(obj) {\n        console.error(event.RequestId, event.StackId, event.LogicalResourceId, obj);\n    }\n    // tslint:disable-next-line:max-line-length\n    // adapted from https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-lambda-function-code.html#cfn-lambda-function-code-cfnresponsemodule\n    // to allow sending an error messge as a reason.\n    function submitResponse(responseStatus, reason) {\n        const responseBody = JSON.stringify({\n            Status: responseStatus,\n            Reason: reason || \"See the details in CloudWatch Log Stream: \" + context.logStreamName,\n            PhysicalResourceId: context.logStreamName,\n            StackId: event.StackId,\n            RequestId: event.RequestId,\n            LogicalResourceId: event.LogicalResourceId,\n            NoEcho: false,\n        });\n        log({ responseBody });\n        const parsedUrl = url.parse(event.ResponseURL);\n        const options = {\n            hostname: parsedUrl.hostname,\n            port: 443,\n            path: parsedUrl.path,\n            method: \"PUT\",\n            headers: {\n                \"content-type\": \"\",\n                \"content-length\": responseBody.length\n            }\n        };\n        const request = https.request(options, (r) => {\n            log({ statusCode: r.statusCode, statusMessage: r.statusMessage });\n            context.done();\n        });\n        request.on(\"error\", (error) => {\n            log({ sendError: error });\n            context.done();\n        });\n        request.write(responseBody);\n        request.end();\n    }\n};"
        },
        "Handler": "index.handler",
        "Role": {
          "Fn::GetAtt": [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
            "Arn"
          ]
        },
        "Runtime": "nodejs8.10",
        "Timeout": 300
      },
      "Metadata": {
        "aws:cdk:path": "CdkInitStack/BucketNotificationsHandler050a0587b7544547bf325f094a3db834/Resource"
      }
    }
  },
  "Parameters": {
    "CandidateServiceCandidateProfileCodeS3BucketF4E9F685": {
      "Type": "String",
      "Description": "S3 bucket for asset \"CdkInitStack/CandidateService/CandidateProfile/Code\""
    },
    "CandidateServiceCandidateProfileCodeS3VersionKey44951822": {
      "Type": "String",
      "Description": "S3 key for asset version \"CdkInitStack/CandidateService/CandidateProfile/Code\""
    },
    "CandidateServiceCandidateProfileCodeArtifactHash559E826C": {
      "Type": "String",
      "Description": "Artifact hash for asset \"CdkInitStack/CandidateService/CandidateProfile/Code\""
    },
    "CandidateServiceAnalyzeCVCodeS3Bucket90474A33": {
      "Type": "String",
      "Description": "S3 bucket for asset \"CdkInitStack/CandidateService/AnalyzeCV/Code\""
    },
    "CandidateServiceAnalyzeCVCodeS3VersionKeyE5EAD488": {
      "Type": "String",
      "Description": "S3 key for asset version \"CdkInitStack/CandidateService/AnalyzeCV/Code\""
    },
    "CandidateServiceAnalyzeCVCodeArtifactHash8FAC88E3": {
      "Type": "String",
      "Description": "Artifact hash for asset \"CdkInitStack/CandidateService/AnalyzeCV/Code\""
    },
    "CandidateServiceEmailClerkCodeS3Bucket9408C750": {
      "Type": "String",
      "Description": "S3 bucket for asset \"CdkInitStack/CandidateService/EmailClerk/Code\""
    },
    "CandidateServiceEmailClerkCodeS3VersionKey5B70DB2E": {
      "Type": "String",
      "Description": "S3 key for asset version \"CdkInitStack/CandidateService/EmailClerk/Code\""
    },
    "CandidateServiceEmailClerkCodeArtifactHash3E8CD1D9": {
      "Type": "String",
      "Description": "Artifact hash for asset \"CdkInitStack/CandidateService/EmailClerk/Code\""
    }
  },
  "Outputs": {
    "CandidateServiceCandidateApiEndpoint55E374D7": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "CandidateServiceCandidateApi827ACF3E"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "CandidateServiceCandidateApiDeploymentStageprodD1919AD8"
            },
            "/"
          ]
        ]
      }
    }
  }
}